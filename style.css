/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.sticky {
  position: sticky;
}

.top-0 {
  top: 0px;
}

.z-\[\] {
  z-index: ;
}

.z-\[90\] {
  z-index: 90;
}

.col-span-2 {
  grid-column: span 2 / span 2;
}

.col-span-1 {
  grid-column: span 1 / span 1;
}

.row-span-2 {
  grid-row: span 2 / span 2;
}

.row-span-1 {
  grid-row: span 1 / span 1;
}

.m-auto {
  margin: auto;
}

.m-\[\] {
  margin: ;
}

.m-\[500px\] {
  margin: 500px;
}

.mx-\[200px\] {
  margin-left: 200px;
  margin-right: 200px;
}

.mx-\[0px\] {
  margin-left: 0px;
  margin-right: 0px;
}

.mx-\[120px\] {
  margin-left: 120px;
  margin-right: 120px;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.mx-\[20px\] {
  margin-left: 20px;
  margin-right: 20px;
}

.mx-\[140px\] {
  margin-left: 140px;
  margin-right: 140px;
}

.my-\[500px\] {
  margin-top: 500px;
  margin-bottom: 500px;
}

.my-\[50px\] {
  margin-top: 50px;
  margin-bottom: 50px;
}

.my-\[10px\] {
  margin-top: 10px;
  margin-bottom: 10px;
}

.my-\[40px\] {
  margin-top: 40px;
  margin-bottom: 40px;
}

.my-auto {
  margin-top: auto;
  margin-bottom: auto;
}

.mt-\[50px\] {
  margin-top: 50px;
}

.mt-\[0px\] {
  margin-top: 0px;
}

.mt-\[70px\] {
  margin-top: 70px;
}

.mb-\[20px\] {
  margin-bottom: 20px;
}

.mb-\[25px\] {
  margin-bottom: 25px;
}

.mb-\[\] {
  margin-bottom: ;
}

.mb-\[50px\] {
  margin-bottom: 50px;
}

.mt-\[10px\] {
  margin-top: 10px;
}

.mt-\[\] {
  margin-top: ;
}

.mt-\[90px\] {
  margin-top: 90px;
}

.mt-\[200px\] {
  margin-top: 200px;
}

.mt-\[px\] {
  margin-top: px;
}

.mt-\[40px\] {
  margin-top: 40px;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.h-\[30px\] {
  height: 30px;
}

.h-\[\] {
  height: ;
}

.h-auto {
  height: auto;
}

.h-\[50px\] {
  height: 50px;
}

.h-\[60px\] {
  height: 60px;
}

.w-10 {
  width: 2.5rem;
}

.w-\[\] {
  width: ;
}

.w-\[20px\] {
  width: 20px;
}

.w-\[200px\] {
  width: 200px;
}

.w-\[240px\] {
  width: 240px;
}

.w-\[auto\] {
  width: auto;
}

.w-\[8-px\] {
  width: 8-px;
}

.w-\[80px\] {
  width: 80px;
}

.w-\[800px\] {
  width: 800px;
}

.w-\[50px\] {
  width: 50px;
}

.w-\[100px\] {
  width: 100px;
}

.w-\[0px\] {
  width: 0px;
}

.w-\[180px\] {
  width: 180px;
}

.w-\[150px\] {
  width: 150px;
}

.w-\[10px\] {
  width: 10px;
}

.w-\[100\] {
  width: 100;
}

.w-\[100\%\] {
  width: 100%;
}

.w-\[190px\] {
  width: 190px;
}

.min-w-\[12oopx\] {
  min-width: 12oopx;
}

.min-w-\[12px\] {
  min-width: 12px;
}

.min-w-\[1200px\] {
  min-width: 1200px;
}

.max-w-\[1200px\] {
  max-width: 1200px;
}

.max-w-\[100vh\] {
  max-width: 100vh;
}

.max-w-\[1500px\] {
  max-width: 1500px;
}

.max-w-\[\] {
  max-width: ;
}

.max-w-\[20px\] {
  max-width: 20px;
}

.max-w-\[200px\] {
  max-width: 200px;
}

.max-w-\[px\] {
  max-width: px;
}

.max-w-\[300px\] {
  max-width: 300px;
}

.max-w-\[auto\] {
  max-width: auto;
}

.max-w-\[220px\] {
  max-width: 220px;
}

.max-w-\[210px\] {
  max-width: 210px;
}

.max-w-\[190px\] {
  max-width: 190px;
}

.max-w-\[1\] {
  max-width: 1;
}

.max-w-\[5s00px\] {
  max-width: 5s00px;
}

.max-w-\[500px\] {
  max-width: 500px;
}

.max-w-\[00px\] {
  max-width: 00px;
}

.max-w-\[350px\] {
  max-width: 350px;
}

.max-w-\[900px\] {
  max-width: 900px;
}

.max-w-\[1100px\] {
  max-width: 1100px;
}

.scale-105 {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.grid-flow-row-dense {
  grid-auto-flow: row dense;
}

.grid-flow-col-dense {
  grid-auto-flow: column dense;
}

.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

.grid-rows-2 {
  grid-template-rows: repeat(2, minmax(0, 1fr));
}

.grid-rows-3 {
  grid-template-rows: repeat(3, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-evenly {
  justify-content: space-evenly;
}

.gap-\[10px\] {
  gap: 10px;
}

.gap-\[200px\] {
  gap: 200px;
}

.gap-\[20px\] {
  gap: 20px;
}

.gap-\[\] {
  gap: ;
}

.gap-\[2px\] {
  gap: 2px;
}

.gap-\[22px\] {
  gap: 22px;
}

.gap-\[30px\] {
  gap: 30px;
}

.gap-\[50px\] {
  gap: 50px;
}

.gap-80 {
  gap: 20rem;
}

.gap-3 {
  gap: 0.75rem;
}

.gap-\[9px\] {
  gap: 9px;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-20 {
  gap: 5rem;
}

.gap-9 {
  gap: 2.25rem;
}

.gap-5 {
  gap: 1.25rem;
}

.gap-y-8 {
  row-gap: 2rem;
}

.gap-y-80 {
  row-gap: 20rem;
}

.gap-x-80 {
  -moz-column-gap: 20rem;
       column-gap: 20rem;
}

.space-x-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.25rem * var(--tw-space-x-reverse));
  margin-left: calc(1.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-52 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(13rem * var(--tw-space-x-reverse));
  margin-left: calc(13rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc( * var(--tw-space-x-reverse));
  margin-left: calc( * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[10rem\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(10rem * var(--tw-space-x-reverse));
  margin-left: calc(10rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[10em\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(10em * var(--tw-space-x-reverse));
  margin-left: calc(10em * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[100em\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(100em * var(--tw-space-x-reverse));
  margin-left: calc(100em * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[em\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(em * var(--tw-space-x-reverse));
  margin-left: calc(em * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[70em\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(70em * var(--tw-space-x-reverse));
  margin-left: calc(70em * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[50em\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(50em * var(--tw-space-x-reverse));
  margin-left: calc(50em * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[25em\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(25em * var(--tw-space-x-reverse));
  margin-left: calc(25em * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[20em\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(20em * var(--tw-space-x-reverse));
  margin-left: calc(20em * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[30em\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(30em * var(--tw-space-x-reverse));
  margin-left: calc(30em * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[3em\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(3em * var(--tw-space-x-reverse));
  margin-left: calc(3em * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[34em\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(34em * var(--tw-space-x-reverse));
  margin-left: calc(34em * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[50vh\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(50vh * var(--tw-space-x-reverse));
  margin-left: calc(50vh * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-\[100vh\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(100vh * var(--tw-space-x-reverse));
  margin-left: calc(100vh * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-0 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0px * var(--tw-space-x-reverse));
  margin-left: calc(0px * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.rounded-md {
  border-radius: 0.375rem;
}

.rounded-\[6px\] {
  border-radius: 6px;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-\[\] {
  border-radius: ;
}

.rounded-\[12px\] {
  border-radius: 12px;
}

.rounded-\[14px\] {
  border-radius: 14px;
}

.rounded-\[1px\] {
  border-radius: 1px;
}

.rounded-\[9px\] {
  border-radius: 9px;
}

.border {
  border-width: 1px;
}

.border-b-2 {
  border-bottom-width: 2px;
}

.bg-slate-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(15 23 42 / var(--tw-bg-opacity));
}

.bg-slate-950 {
  --tw-bg-opacity: 1;
  background-color: rgb(2 6 23 / var(--tw-bg-opacity));
}

.bg-\[\] {
  background-color: ;
}

.bg-\[0B60B0\] {
  background-color: 0B60B0;
}

.bg-\[\#0B60B0\] {
  --tw-bg-opacity: 1;
  background-color: rgb(11 96 176 / var(--tw-bg-opacity));
}

.bg-\[F0EDCF\] {
  background-color: F0EDCF;
}

.bg-\[\#F0EDCF\] {
  --tw-bg-opacity: 1;
  background-color: rgb(240 237 207 / var(--tw-bg-opacity));
}

.bg-\[\#ebeef0\] {
  --tw-bg-opacity: 1;
  background-color: rgb(235 238 240 / var(--tw-bg-opacity));
}

.bg-clip-padding {
  background-clip: padding-box;
}

.object-fill {
  -o-object-fit: fill;
     object-fit: fill;
}

.p-\[20px\] {
  padding: 20px;
}

.p-\[200px\] {
  padding: 200px;
}

.p-\[20x0px\] {
  padding: 20x0px;
}

.p-\[8px\] {
  padding: 8px;
}

.p-\[px\] {
  padding: px;
}

.p-\[6px\] {
  padding: 6px;
}

.p-\[\] {
  padding: ;
}

.p-\[1px\] {
  padding: 1px;
}

.p-\[3px\] {
  padding: 3px;
}

.p-\[10px\] {
  padding: 10px;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.px-\[5px\] {
  padding-left: 5px;
  padding-right: 5px;
}

.pt-\[20px\] {
  padding-top: 20px;
}

.pt-\[10px\] {
  padding-top: 10px;
}

.pt-\[7px\] {
  padding-top: 7px;
}

.pt-\[5\] {
  padding-top: 5;
}

.pt-\[15px\] {
  padding-top: 15px;
}

.pb-\[20px\] {
  padding-bottom: 20px;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

.text-\[300px\] {
  font-size: 300px;
}

.text-\[1000px\] {
  font-size: 1000px;
}

.text-\[00px\] {
  font-size: 00px;
}

.text-\[20px\] {
  font-size: 20px;
}

.text-\[50px\] {
  font-size: 50px;
}

.text-\[40px\] {
  font-size: 40px;
}

.text-\[30px\] {
  font-size: 30px;
}

.text-\[3px\] {
  font-size: 3px;
}

.text-\[34px\] {
  font-size: 34px;
}

.text-\[200px\] {
  font-size: 200px;
}

.text-\[2rem\] {
  font-size: 2rem;
}

.text-\[5rem\] {
  font-size: 5rem;
}

.text-\[4rem\] {
  font-size: 4rem;
}

.text-\[4\.5rem\] {
  font-size: 4.5rem;
}

.text-\[1em\] {
  font-size: 1em;
}

.text-\[2em\] {
  font-size: 2em;
}

.text-\[1\.3em\] {
  font-size: 1.3em;
}

.text-\[18px\] {
  font-size: 18px;
}

.text-\[3rem\] {
  font-size: 3rem;
}

.text-\[1\.5rem\] {
  font-size: 1.5rem;
}

.font-bold {
  font-weight: 700;
}

.font-medium {
  font-weight: 500;
}

.leading-3 {
  line-height: .75rem;
}

.leading-10 {
  line-height: 2.5rem;
}

.leading-\[2em\] {
  line-height: 2em;
}

.leading-\[1em\] {
  line-height: 1em;
}

.leading-\[1\.2em\] {
  line-height: 1.2em;
}

.tracking-normal {
  letter-spacing: 0em;
}

.tracking-tighter {
  letter-spacing: -0.05em;
}

.tracking-wide {
  letter-spacing: 0.025em;
}

.tracking-\[1em\] {
  letter-spacing: 1em;
}

.tracking-\[\.5em\] {
  letter-spacing: .5em;
}

.tracking-\[\.em\] {
  letter-spacing: .em;
}

.tracking-\[\.2em\] {
  letter-spacing: .2em;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-\[50pxpx\] {
  color: 50pxpx;
}

.text-\[\] {
  color: ;
}

.text-\[px\] {
  color: px;
}

.text-\[x\] {
  color: x;
}

.text-\[2\] {
  color: 2;
}

.text-\[rem\] {
  color: rem;
}

.text-\[\#40A2D8\] {
  --tw-text-opacity: 1;
  color: rgb(64 162 216 / var(--tw-text-opacity));
}

.text-\[\#000000\] {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.text-\[\#f6f3f3\] {
  --tw-text-opacity: 1;
  color: rgb(246 243 243 / var(--tw-text-opacity));
}

.text-\[\#\] {
  color: #;
}

.text-\[\#F0EDCF\] {
  --tw-text-opacity: 1;
  color: rgb(240 237 207 / var(--tw-text-opacity));
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.text-\[\#ebf1f5\] {
  --tw-text-opacity: 1;
  color: rgb(235 241 245 / var(--tw-text-opacity));
}

.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-indigo-500\/50 {
  --tw-shadow-color: rgb(99 102 241 / 0.5);
  --tw-shadow: var(--tw-shadow-colored);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-150 {
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.duration-\[0\.3s\] {
  transition-duration: 0.3s;
}

.duration-\[\] {
  transition-duration: ;
}

.duration-\[o\.3s\] {
  transition-duration: o.3s;
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.hover\:scale-105:hover {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-90:hover {
  --tw-scale-x: .9;
  --tw-scale-y: .9;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-150:hover {
  --tw-scale-x: 1.5;
  --tw-scale-y: 1.5;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-100:hover {
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:scale-x-150:hover {
  --tw-scale-x: 1.5;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:rounded-sm:hover {
  border-radius: 0.125rem;
}

.hover\:rounded-\[\]:hover {
  border-radius: ;
}

.hover\:rounded-\[10px\]:hover {
  border-radius: 10px;
}

.hover\:rounded-\[6px\]:hover {
  border-radius: 6px;
}

.hover\:bg-\[\#40A2D8\]:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(64 162 216 / var(--tw-bg-opacity));
}

.hover\:bg-slate-400:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(148 163 184 / var(--tw-bg-opacity));
}

.hover\:bg-slate-300:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(203 213 225 / var(--tw-bg-opacity));
}

.hover\:bg-slate-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(241 245 249 / var(--tw-bg-opacity));
}

.hover\:bg-slate-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(226 232 240 / var(--tw-bg-opacity));
}

.hover\:p-\[20px\]:hover {
  padding: 20px;
}

.hover\:p-\[10px\]:hover {
  padding: 10px;
}

.hover\:text-\[\]:hover {
  color: ;
}

.hover\:text-\[\#F0EDCF\]:hover {
  --tw-text-opacity: 1;
  color: rgb(240 237 207 / var(--tw-text-opacity));
}

.hover\:text-black:hover {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.hover\:shadow:hover {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:shadow-gray-700:hover {
  --tw-shadow-color: #374151;
  --tw-shadow: var(--tw-shadow-colored);
}

.hover\:shadow-gray-400:hover {
  --tw-shadow-color: #9ca3af;
  --tw-shadow: var(--tw-shadow-colored);
}

.hover\:shadow-gray-100:hover {
  --tw-shadow-color: #f3f4f6;
  --tw-shadow: var(--tw-shadow-colored);
}

.hover\:transition-all:hover {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.hover\:ease-in:hover {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.hover\:ease-in-out:hover {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}